# -*- coding: utf-8 -*-
"""Bigdata Prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pZPM-1_XPbn9OLQ-Y7RWsIW8Wk1tJpFi
"""

import pandas as pd
import numpy as np

bigdata= pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Big%20Sales%20Data.csv')

bigdata.head()

bigdata.info()

bigdata.columns

bigdata.describe()
bigdata['Item_Weight'].fillna(bigdata.groupby(['Item_Type'])['Item_Weight'].transform('mean'),inplace=True)
#bigdata.info()
bigdata.describe()

import seaborn as sns
sns.pairplot(bigdata)

bigdata[['Item_Identifier']].value_counts()

bigdata[['Item_Fat_Content']].value_counts()

bigdata.replace({'Item_Fat_Content':{'LF': 'Low Fat','reg':'Regular','low fat':'Low Fat'}} ,inplace= True)
bigdata[['Item_Fat_Content']].value_counts()

bigdata.replace({'Item_Fat_Content':{'Low Fat':'0','Regular':'1'}},inplace=True)
bigdata[['Item_Fat_Content']].value_counts()

bigdata[['Item_Type']].value_counts()
bigdata.replace({'Item_Type':{'Fruits and Vegetables':0,'Snack Foods':0,'Household': 1,'Frozen Foods':0,'Dairy':0,'Baking Goods':0,'Canned':0,'Health and Hygiene':1,'Meat':0,'Soft Drinks':0,'Breads':0,'Hard Drinks':0,'Others':2,'Starchy Foods':0,'Breakfast':0,'Seafood':0}},inplace= True)
bigdata[['Item_Type']].value_counts()

bigdata[['Outlet_Identifier']].value_counts()
bigdata.replace({'Outlet_Identifier':{'OUT027':0,'OUT013':1,'OUT035':2,'OUT046':3,'OUT049':4,'OUT045':5,'OUT018':6,'OUT017':7,'OUT010':8,'OUT019':9}},inplace=True)
bigdata[['Outlet_Identifier']].value_counts()

bigdata[['Outlet_Size']].value_counts()
bigdata.replace({'Outlet_Size':{'Small':0,'Medium':1,'High':2}},inplace=True)
bigdata[['Outlet_Size']].value_counts()

bigdata[['Outlet_Location_Type']].value_counts()
bigdata.replace({'Outlet_Location_Type':{'Tier 1':0,'Tier 2':1,'Tier 3':2}},inplace=True)
bigdata[['Outlet_Location_Type']].value_counts()

bigdata[['Outlet_Type']].value_counts()
bigdata.replace({'Outlet_Type':{'Grocery Store':0,'Supermarket Type1':1,'Supermarket Type2':2,'Supermarket Type3':3}},inplace=True)
bigdata[['Outlet_Type']].value_counts()

bigdata.head()

bigdata.shape

y=bigdata['Item_Outlet_Sales']
y.shape

X=bigdata[[ 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility',
       'Item_Type', 'Item_MRP', 'Outlet_Identifier',
       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',
       'Outlet_Type']]
X.shape

X=bigdata.drop(['Item_Identifier','Item_Outlet_Sales'],axis=1)
X

from sklearn.preprocessing import StandardScaler
sc= StandardScaler()
#Getting X variable standardised

X_std=bigdata[['Item_Weight','Item_Visibility','Item_MRP','Outlet_Establishment_Year']]

X_std=sc.fit_transform(X_std)

X_std

X[['Item_Weight','Item_Visibility','Item_MRP','Outlet_Establishment_Year']]= pd.DataFrame(X_std,columns=[['Item_Weight','Item_Visibility','Item_MRP','Outlet_Establishment_Year']])

X

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.1,random_state=2529)
X_train.shape,X_test.shape,y_train.shape,y_test.shape

from sklearn.ensemble import RandomForestRegressor
rfr=RandomForestRegressor(random_state=2529)
rfr.fit(X_train,y_train)

y_predic=rfr.predict(X_test)

y_predic.shape

y_predic

from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score

mean_squared_error(y_test,y_predic)

mean_absolute_error(y_test,y_predic)

r2_score(y_test,y_predic)

#VISUALISATION
import matplotlib.pyplot as plt
plt.scatter(y_test,y_predic)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual prices VS Predicted Prices")
plt.show()